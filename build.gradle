project.group = "com.controller"
project.version = "1.0.0"

project.ext {
    springVersion = "4.2.2.RELEASE"
    slf4jVersion = "1.7.12"
    logbackVersion = "1.1.3"
    httpClientVErsion = "4.3.2"
    cxfVersion = "3.1.4"
    jacksonVersion = "2.6.3"
    swaggerVersion = "1.5.4"
    aspectjVersion = "1.6.12"
    cxfArtifacts = [
            "cxf-rt-frontend-jaxrs",
            "cxf-rt-transports-http",
            "cxf-rt-rs-client",
            "cxf-rt-rs-service-description"
    ]
    springArtifacts = [
            "spring-beans",
            "spring-context",
            "spring-core",
            "spring-aop",
            "spring-web",
            "spring-expression",
            "spring-tx",
            "spring-orm",
            "spring-jdbc"
    ]
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "com.bmuschko:gradle-tomcat-plugin:2.2.3"
        classpath "com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3"
    }
}


apply plugin: "war"
apply plugin: "nebula.provided-base"

apply plugin: "com.bmuschko.tomcat"

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}


dependencies {
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"

    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"

    compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
    compile "javax.inject:javax.inject:1"
    provided "javax.servlet:javax.servlet-api:3.1.0"

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion"

    compile "io.swagger:swagger-jaxrs:$swaggerVersion"

    compile("com.paypal.sdk:rest-api-sdk:0.5.2") {
        exclude module: 'servlet-api'
    }
    compile "com.goshippo:shippo-java-client:1.1.3"
    compile "org.apache.httpcomponents:httpclient:4.5.1"

    springArtifacts.each { artifact ->
        compile "org.springframework:$artifact:$springVersion"
    }

    cxfArtifacts.each { artifact ->
        compile "org.apache.cxf:$artifact:$cxfVersion"
    }

    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "cglib:cglib:2.2.2"

    // Persistence
    compile 'org.ow2.asm:asm:4.0'
    compile "org.datanucleus:datanucleus-api-jpa:4.1.0-release"
    compile "org.datanucleus:datanucleus-api-jdo:4.1.0-release"
    compile "org.datanucleus:datanucleus-core:4.1.0-release"
    compile "org.apache.geronimo.specs:geronimo-jpa_2.0_spec:1.0"
    compile "javax.jdo:jdo-api:3.0.1"
    compile "javax.transaction:jta:1.1"

    compile "com.zaxxer:HikariCP:2.4.3"

    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}